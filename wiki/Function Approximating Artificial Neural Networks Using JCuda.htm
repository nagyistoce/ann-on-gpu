<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<HTML>
<HEAD>
<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
<META http-equiv="X-UA-Compatible" content="IE=8">
<TITLE>Created by BCL easyConverter SDK 3 (HTML Version)</TITLE>
<STYLE type="text/css">

body {margin-top: 0px;margin-left: 0px;}

#page_1 {position:relative; overflow: hidden;margin: 96px 0px 579px 96px;padding: 0px;border: none;width: 720px;}





#page_2 {position:relative; overflow: hidden;margin: 96px 0px 138px 96px;padding: 0px;border: none;width: 720px;}

#page_2 #dimg1 {position:absolute;top:0px;left:2px;z-index:-1;width:624px;height:467px;}
#page_2 #dimg1 #img1 {width:624px;height:467px;}




#page_3 {position:relative; overflow: hidden;margin: 97px 0px 154px 96px;padding: 0px;border: none;width: 720px;}
#page_3 #id_1 {border:none;margin: 0px 0px 0px 0px;padding: 0px;border:none;width: 720px;overflow: hidden;}
#page_3 #id_2 {border:none;margin: 18px 0px 0px 48px;padding: 0px;border:none;width: 672px;overflow: hidden;}

#page_3 #dimg1 {position:absolute;top:90px;left:2px;z-index:-1;width:624px;height:304px;}
#page_3 #dimg1 #img1 {width:624px;height:304px;}




#page_4 {position:relative; overflow: hidden;margin: 96px 0px 434px 96px;padding: 0px;border: none;width: 626px;}

#page_4 #dimg1 {position:absolute;top:0px;left:2px;z-index:-1;width:624px;height:467px;}
#page_4 #dimg1 #img1 {width:624px;height:467px;}




#page_5 {position:relative; overflow: hidden;margin: 96px 0px 379px 96px;padding: 0px;border: none;width: 626px;}

#page_5 #dimg1 {position:absolute;top:0px;left:2px;z-index:-1;width:624px;height:467px;}
#page_5 #dimg1 #img1 {width:624px;height:467px;}




#page_6 {position:relative; overflow: hidden;margin: 96px 0px 339px 96px;padding: 0px;border: none;width: 720px;}

#page_6 #dimg1 {position:absolute;top:0px;left:2px;z-index:-1;width:624px;height:469px;}
#page_6 #dimg1 #img1 {width:624px;height:469px;}




#page_7 {position:relative; overflow: hidden;margin: 96px 0px 117px 96px;padding: 0px;border: none;width: 720px;}

#page_7 #dimg1 {position:absolute;top:0px;left:2px;z-index:-1;width:624px;height:468px;}
#page_7 #dimg1 #img1 {width:624px;height:468px;}




#page_8 {position:relative; overflow: hidden;margin: 97px 0px 259px 96px;padding: 0px;border: none;width: 720px;}

#page_8 #dimg1 {position:absolute;top:112px;left:2px;z-index:-1;width:624px;height:327px;}
#page_8 #dimg1 #img1 {width:624px;height:327px;}




.dclr {clear:both;float:none;height:1px;margin:0px;padding:0px;overflow:hidden;}

.ft0{font: bold 16px 'Arial';line-height: 17px;}
.ft1{font: bold 16px 'Arial';line-height: 18px;}
.ft2{font: bold 10px 'Arial';line-height: 12px;}
.ft3{font: bold 16px 'Arial';line-height: 19px;}
.ft4{font: bold 32px 'Arial';line-height: 37px;}
.ft5{font: 12px 'Arial';line-height: 19px;}
.ft6{font: 16px 'Arial';line-height: 19px;}
.ft7{font: 16px 'Arial';line-height: 18px;}
.ft8{font: 16px 'Wingdings';line-height: 17px;}
.ft9{font: 16px 'Arial';margin-left: 17px;line-height: 18px;}
.ft10{font: bold 29px 'Arial';line-height: 34px;}
.ft11{font: 13px 'Arial';line-height: 16px;}
.ft12{font: 15px 'Arial';line-height: 18px;}
.ft13{font: 15px 'Arial';line-height: 17px;}
.ft14{font: bold 16px 'Arial';text-decoration: underline;line-height: 19px;}
.ft15{font: 12px 'Arial';line-height: 30px;}
.ft16{font: bold 13px 'Cambria';line-height: 15px;}
.ft17{font: 11px 'Arial';line-height: 20px;}
.ft18{font: 13px 'Arial';line-height: 19px;}
.ft19{font: bold 13px 'Arial';line-height: 16px;}
.ft20{font: 15px 'Wingdings';line-height: 16px;}
.ft21{font: 13px 'Arial';margin-left: 17px;line-height: 16px;}
.ft22{font: 15px 'Arial';margin-left: 17px;line-height: 30px;}
.ft23{font: 15px 'Arial';line-height: 30px;}
.ft24{font: 16px 'Arial';text-decoration: underline;color: #0000ff;margin-left: 17px;line-height: 18px;}
.ft25{font: 16px 'Arial';text-decoration: underline;color: #0000ff;line-height: 18px;}

.p0{text-align: left;margin-top: 0px;margin-bottom: 0px;white-space: nowrap;}
.p1{text-align: left;margin-top: 1px;margin-bottom: 0px;}
.p2{text-align: left;margin-top: 19px;margin-bottom: 0px;}
.p3{text-align: left;padding-right: 100px;margin-top: 20px;margin-bottom: 0px;}
.p4{text-align: left;padding-right: 98px;margin-top: 18px;margin-bottom: 0px;}
.p5{text-align: left;margin-top: 487px;margin-bottom: 0px;}
.p6{text-align: justify;padding-left: 24px;margin-top: 20px;margin-bottom: 0px;}
.p7{text-align: justify;padding-left: 24px;margin-top: 1px;margin-bottom: 0px;}
.p8{text-align: justify;padding-left: 48px;padding-right: 99px;margin-top: 1px;margin-bottom: 0px;text-indent: -24px;}
.p9{text-align: left;margin-top: 20px;margin-bottom: 0px;}
.p10{text-align: left;padding-right: 96px;margin-top: 22px;margin-bottom: 0px;}
.p11{text-align: left;margin-top: 0px;margin-bottom: 0px;}
.p12{text-align: left;margin-top: 344px;margin-bottom: 0px;}
.p13{text-align: left;padding-left: 48px;margin-top: 19px;margin-bottom: 0px;}
.p14{text-align: left;padding-left: 96px;margin-top: 20px;margin-bottom: 0px;}
.p15{text-align: left;padding-left: 96px;margin-top: 19px;margin-bottom: 0px;}
.p16{text-align: left;padding-left: 48px;padding-right: 167px;margin-top: 14px;margin-bottom: 0px;}
.p17{text-align: left;padding-left: 96px;margin-top: 21px;margin-bottom: 0px;}
.p18{text-align: left;padding-right: 23px;margin-top: 486px;margin-bottom: 0px;text-indent: 48px;}
.p19{text-align: left;padding-right: 3px;margin-top: 487px;margin-bottom: 0px;text-indent: 48px;}
.p20{text-align: left;padding-right: 13px;margin-top: 18px;margin-bottom: 0px;text-indent: 48px;}
.p21{text-align: left;padding-left: 48px;margin-top: 488px;margin-bottom: 0px;}
.p22{text-align: left;padding-right: 115px;margin-top: 4px;margin-bottom: 0px;}
.p23{text-align: left;margin-top: 18px;margin-bottom: 0px;}
.p24{text-align: left;padding-left: 48px;margin-top: 20px;margin-bottom: 0px;}
.p25{text-align: justify;padding-left: 72px;margin-top: 19px;margin-bottom: 0px;}
.p26{text-align: justify;padding-left: 96px;padding-right: 106px;margin-top: 3px;margin-bottom: 0px;}
.p27{text-align: justify;padding-left: 96px;padding-right: 96px;margin-top: 0px;margin-bottom: 0px;text-indent: -24px;}
.p28{text-align: justify;padding-right: 449px;margin-top: 18px;margin-bottom: 0px;text-indent: 24px;}
.p29{text-align: justify;padding-left: 24px;margin-top: 17px;margin-bottom: 0px;}
.p30{text-align: justify;padding-left: 48px;padding-right: 114px;margin-top: 0px;margin-bottom: 0px;text-indent: -24px;}
.p31{text-align: justify;padding-left: 24px;margin-top: 2px;margin-bottom: 0px;}
.p32{text-align: left;margin-top: 365px;margin-bottom: 0px;}
.p33{text-align: justify;padding-left: 24px;margin-top: 19px;margin-bottom: 0px;}
.p34{text-align: justify;padding-left: 24px;margin-top: 4px;margin-bottom: 0px;}

.td0{padding: 0px;margin: 0px;width: 122px;vertical-align: bottom;}
.td1{padding: 0px;margin: 0px;width: 494px;vertical-align: bottom;}

.tr0{height: 19px;}
.tr1{height: 20px;}

.t0{width: 616px;font: bold 16px 'Arial';}

</STYLE>
</HEAD>

<BODY>
<DIV id="page_1">


<TABLE cellpadding=0 cellspacing=0 class="t0">
<TR>
	<TD class="tr0 td0"><P class="p0 ft0">Title:</P></TD>
	<TD class="tr0 td1"><P class="p0 ft0">Function Approximating Artificial Neural Networks Using JCuda</P></TD>
</TR>
<TR>
	<TD class="tr0 td0"><P class="p0 ft1">Author:</P></TD>
	<TD class="tr0 td1"><P class="p0 ft1">Praveen Baburao Kulkarni</P></TD>
</TR>
<TR>
	<TD class="tr0 td0"><P class="p0 ft1">Email:</P></TD>
	<TD class="tr0 td1"><P class="p0 ft1">Praveen_Kulkarni02@infosys.com</P></TD>
</TR>
<TR>
	<TD class="tr0 td0"><P class="p0 ft1">Language:</P></TD>
	<TD class="tr0 td1"><P class="p0 ft1">Java, JCuda, JavaFX, CUDA(Kernel code)</P></TD>
</TR>
<TR>
	<TD class="tr0 td0"><P class="p0 ft1">Platform:</P></TD>
	<TD class="tr0 td1"><P class="p0 ft1">Windows</P></TD>
</TR>
<TR>
	<TD class="tr1 td0"><P class="p0 ft1">Technology:</P></TD>
	<TD class="tr1 td1"><P class="p0 ft1">CUDA</P></TD>
</TR>
<TR>
	<TD class="tr0 td0"><P class="p0 ft0">Description:</P></TD>
	<TD class="tr0 td1"><P class="p0 ft2">Application code provided gives the implementation of <NOBR>back-propagation</NOBR> algorithm for ANN</P></TD>
</TR>
</TABLE>
<P class="p1 ft3">training on both CPU and GPU.</P>
<P class="p2 ft4">Introduction</P>
<P class="p3 ft5">The code provided gives implementation of back propagation training algorithm for CPU (TrainANNCpuMode.java) and GPU (TrainANNGpuMode.java). CPU code is a sequential java code while GPU code is CUDA implementation done with help of JCuda (Java bindings for CUDA). The back propagation algorithm implemented is designed to make use of 3 layered neural network for function approximation.</P>
<P class="p4 ft6">As your number of patterns increase required CPU time grows exponentially thus increasing the time for training. By switching to GPU mode you will be able to see drastic time improvements (greater than 15x) when it comes to large number of patterns.</P>
</DIV>
<DIV id="page_2">
<DIV id="dimg1">
<IMG src="Function%20Approximating%20Artificial%20Neural%20Networks%20Using%20JCuda_images/Function%20Approximating%20Artificial%20Neural%20Networks%20Using%20JCuda2x1.jpg" id="img1">
</DIV>


<DIV class="dclr"></DIV>
<P class="p5 ft7">Above is the chart of number of patterns v/s time taken by CPU and GPU.</P>
<P class="p2 ft7">CPU used was Intel Xeon CPU E5540 @ 2.53 GHz and GPU used was NVIDIA Tesla T10 processor.</P>
<P class="p2 ft3">Note:</P>
<P class="p6 ft7"><SPAN class="ft8"></SPAN><SPAN class="ft9">Many cores available for CPU were not used</SPAN></P>
<P class="p7 ft7"><SPAN class="ft8"></SPAN><SPAN class="ft9">Only single GPU is used</SPAN></P>
<P class="p8 ft7"><SPAN class="ft8"></SPAN><SPAN class="ft9">In GPU mode some steps in algorithms especially sequential ones are done on CPU rather than GPU thus making it a hybrid approach</SPAN></P>
<P class="p9 ft10">Background</P>
<P class="p9 ft11">You should know working of back propagation algorithm for training ANN and using ANN as universal function approximator.</P>
<P class="p10 ft12">Should have working knowledge of JavaFX if you want to make any changes to user interface. If you are not interested in UI you can just concentrate on java files in annCode package.</P>
</DIV>
<DIV id="page_3">
<DIV id="dimg1">
<IMG src="Function%20Approximating%20Artificial%20Neural%20Networks%20Using%20JCuda_images/Function%20Approximating%20Artificial%20Neural%20Networks%20Using%20JCuda3x1.jpg" id="img1">
</DIV>


<DIV id="id_1">
<P class="p11 ft10">Using the application</P>
<P class="p9 ft11">This is the initial screen you will get when you start this application. Also explanation of some controls is given alongside.</P>
<P class="p12 ft13">‘SHOW CPU VS GPU CHART’ button will display the comparison chart shown above in Introduction section.</P>
<P class="p9 ft14">Working in CPU mode</P>
<P class="p13 ft7">Let us use the default settings i.e.</P>
<P class="p14 ft7">Number of patterns: 1024</P>
<P class="p15 ft7">Learning constant: 0.03</P>
<P class="p14 ft7">Mode: CPU MODE</P>
<P class="p16 ft15">Let us use text box to enter formula for function. You can also use the formulas given in drop down. Note: You should enter formula that can be compiled by java or you will get exception.</P>
<P class="p17 ft7">Formula entered in text box:</P>
<P class="p17 ft16">y = <NOBR>(0.5f*x*((float)Math.sin(x*10))+(float)Math.pow(Math.cos(x*10),2))-0.3f</NOBR></P>
</DIV>
<DIV id="id_2">
<P class="p11 ft7">Figure below shows what you get on clicking ‘COMPUTE’ button.</P>
</DIV>
</DIV>
<DIV id="page_4">
<DIV id="dimg1">
<IMG src="Function%20Approximating%20Artificial%20Neural%20Networks%20Using%20JCuda_images/Function%20Approximating%20Artificial%20Neural%20Networks%20Using%20JCuda4x1.jpg" id="img1">
</DIV>


<DIV class="dclr"></DIV>
<P class="p18 ft17">Now you can start training ANN and hit STOP button when you think enough convergence is achieved. In below figure we can see that the green line (ANN output) has fitted near about properly over yellow line (desired response)</P>
</DIV>
<DIV id="page_5">
<DIV id="dimg1">
<IMG src="Function%20Approximating%20Artificial%20Neural%20Networks%20Using%20JCuda_images/Function%20Approximating%20Artificial%20Neural%20Networks%20Using%20JCuda5x1.jpg" id="img1">
</DIV>


<DIV class="dclr"></DIV>
<P class="p19 ft5">Although learning constant of 0.03 is good choice and hence we get better convergence. But if we select learning constant of value near about 0.1 then we get bad convergence and current error is also too large.</P>
<P class="p20 ft18">Below figure shows how it will look like for bad convergence. The ANN output will be jumping around the desired response (yellow line). You can also see that the current error is too high.</P>
</DIV>
<DIV id="page_6">
<DIV id="dimg1">
<IMG src="Function%20Approximating%20Artificial%20Neural%20Networks%20Using%20JCuda_images/Function%20Approximating%20Artificial%20Neural%20Networks%20Using%20JCuda6x1.jpg" id="img1">
</DIV>


<DIV class="dclr"></DIV>
<P class="p21 ft11"><SPAN class="ft19">Note: </SPAN>It may happen that for some functions the results may not converge and your current error won’t reduce.</P>
<P class="p22 ft18">In order to get improvement you have to use double instead of float i.e. high precision representation. You can also use some pre conditioning algorithm to improve condition number of matrices involved.</P>
<P class="p23 ft14">Working in GPU mode</P>
<P class="p24 ft7">You can proceed with same steps as mentioned above. Only difference is select GPU mode.</P>
</DIV>
<DIV id="page_7">
<DIV id="dimg1">
<IMG src="Function%20Approximating%20Artificial%20Neural%20Networks%20Using%20JCuda_images/Function%20Approximating%20Artificial%20Neural%20Networks%20Using%20JCuda7x1.jpg" id="img1">
</DIV>


<DIV class="dclr"></DIV>
<P class="p21 ft3">Note:</P>
<P class="p25 ft11"><SPAN class="ft20"></SPAN><SPAN class="ft21">Initially as you click START button it takes significant time as the JCuda code is designed to compile</SPAN></P>
<P class="p26 ft5">CUDA kernels on the fly i.e. during execution. But it is one time process and doesn’t matter a lot. If you want you can change the code so that CUDA code is precompiled at start</P>
<P class="p27 ft7"><SPAN class="ft8"></SPAN><SPAN class="ft9">As you go on increasing the number of patterns you will find significant time improvement in case of GPU mode</SPAN></P>
<P class="p9 ft10">Using the code</P>
<P class="p9 ft7">IDE for editing/viewing the source code</P>
<P class="p28 ft23"><SPAN class="ft8"></SPAN><SPAN class="ft22">NetBeans IDE 6.9.1 with JavaFX 1.3.1 support Other required things</SPAN></P>
<P class="p29 ft7"><SPAN class="ft8"></SPAN><SPAN class="ft9">Java 1.6</SPAN></P>
<P class="p7 ft7"><SPAN class="ft8"></SPAN><SPAN class="ft9">JavaFX 1.3.1</SPAN></P>
</DIV>
<DIV id="page_8">
<DIV id="dimg1">
<IMG src="Function%20Approximating%20Artificial%20Neural%20Networks%20Using%20JCuda_images/Function%20Approximating%20Artificial%20Neural%20Networks%20Using%20JCuda8x1.jpg" id="img1">
</DIV>


<P class="p30 ft7"><SPAN class="ft8"></SPAN><SPAN class="ft9">JCuda 3.1 drivers for windows (Make sure that you place them in bin folder in java installation directory so that application can find them at runtime)</SPAN></P>
<P class="p31 ft7"><SPAN class="ft8"></SPAN><SPAN class="ft9">Other required jars are included in project</SPAN></P>
<P class="p2 ft7">This is the project structure that you will see when you open project in NetBeans IDE</P>
<P class="p32 ft10">Conclusion</P>
<P class="p6 ft7"><SPAN class="ft8"></SPAN><SPAN class="ft9">Application source code shows how java code can make use of GPU using jcuda</SPAN></P>
<P class="p7 ft7"><SPAN class="ft8"></SPAN><SPAN class="ft9">Considerable performance gain was achieved (above 15x)</SPAN></P>
<P class="p7 ft7"><SPAN class="ft8"></SPAN><SPAN class="ft9">Comparison of two modes shows the benefit of using CUDA</SPAN></P>
<P class="p9 ft10">References</P>
<P class="p33 ft7"><SPAN class="ft8"></SPAN><SPAN class="ft9">Introduction to Artificial Neural Systems by Jacek M. Zurada</SPAN></P>
<P class="p34 ft7"><SPAN class="ft8"></SPAN><SPAN class="ft9">Neural Networks in computer intelligence by LiMin Fu</SPAN></P>
<P class="p7 ft25"><SPAN class="ft8"></SPAN><A href="http://www.jcuda.de/"><SPAN class="ft24">http://www.jcuda.de/</SPAN></A></P>
</DIV>
<div style="padding:50px 0 15px 0;"><a href="http://www.pdfonline.com/convert-pdf-to-html/" style="padding:10;font-family:Arial, Helvetica, sans-serif; font-size:12px; color:#666; border-top:solid medium #CCC">Convert PDF to HTML</a></div></body>
</HTML>
